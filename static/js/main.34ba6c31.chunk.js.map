{"version":3,"sources":["components/Main.js","components/Quiz.js","components/Result.js","App.js","index.js"],"names":["Main","nickname","numberOfQuestions","setDisplay","category","difficulty","handleChange","Fragment","onClick","href","className","id","onSubmit","e","preventDefault","onChange","style","outline","type","placeholder","min","max","name","value","Quiz","score","setScore","api","setApi","username","useState","step","setStep","isLoaded","setIsLoaded","questions","useEffect","triviaApi","fetch","then","response","json","data","results","catch","error","console","answerClick","toString","log","textAlign","dangerouslySetInnerHTML","__html","question","incorrect_answers","correct_answer","display","justifyContent","alignItems","height","Result","App","setUsername","setnumberOfQuestions","setCategory","setDifficulty","target","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.34ba6c31.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Main = ({ nickname, numberOfQuestions, category, difficulty, setDisplay, handleChange }) => {\r\n    return (\r\n        <React.Fragment>\r\n            <header>\r\n                <a onClick={() => setDisplay('main')} href=\"/quiz-app\"><p className=\"title-center\">Quiz App</p></a>\r\n                <p className=\"subTitle-center\">Test Yourself!</p>\r\n            </header>\r\n\r\n            <form id=\"container\" onSubmit={e => {\r\n                // console.log('Submitted!')\r\n                e.preventDefault()\r\n                // console.log(nickname, numberOfQuestions, category, difficulty)\r\n                if(numberOfQuestions > 0) {\r\n                    setDisplay('quiz')\r\n                }\r\n            }}>\r\n                {/* Nickname */}\r\n                <input\r\n                    onChange={handleChange}\r\n                    className=\"inputs\"\r\n                    style={{ outline: '0' }}\r\n                    type=\"text\" placeholder=\"Your Username\"\r\n                    id=\"nickname\" />\r\n\r\n                {/* <br /> */}\r\n\r\n                {/* Number Of Questions */}\r\n                <input\r\n                    onChange={handleChange}\r\n                    className=\"inputs\"\r\n                    type=\"number\"\r\n                    min=\"1\"\r\n                    max=\"50\"\r\n                    placeholder=\"Number Of Questions\"\r\n                    id=\"number-of-questions\" />\r\n\r\n                {/* <br /> */}\r\n\r\n                {/* Category */}\r\n                <select onChange={handleChange} id=\"category\" className=\"inputs\" name=\"trivia_category\">\r\n                    <option value={null}>Any Category</option>\r\n                    <option value=\"9\">General Knowledge</option>\r\n                    <option value=\"10\">Entertainment: Books</option>\r\n                    <option value=\"11\">Entertainment: Film</option>\r\n                    <option value=\"12\">Entertainment: Music</option>\r\n                    <option value=\"13\">Entertainment: Musicals &amp; Theatres</option>\r\n                    <option value=\"14\">Entertainment: Television</option>\r\n                    <option value=\"15\">Entertainment: Video Games</option>\r\n                    <option value=\"16\">Entertainment: Board Games</option>\r\n                    <option value=\"17\">Science &amp; Nature</option>\r\n                    <option value=\"18\">Science: Computers</option>\r\n                    <option value=\"19\">Science: Mathematics</option>\r\n                    <option value=\"20\">Mythology</option>\r\n                    <option value=\"21\">Sports</option>\r\n                    <option value=\"22\">Geography</option>\r\n                    <option value=\"23\">History</option>\r\n                    <option value=\"24\">Politics</option>\r\n                    <option value=\"25\">Art</option>\r\n                    <option value=\"26\">Celebrities</option>\r\n                    <option value=\"27\">Animals</option>\r\n                    <option value=\"28\">Vehicles</option>\r\n                    <option value=\"29\">Entertainment: Comics</option>\r\n                    <option value=\"30\">Science: Gadgets</option>\r\n                    <option value=\"31\">Entertainment: Japanese Anime &amp; Manga</option>\r\n                    <option value=\"32\">Entertainment: Cartoon &amp; Animations</option>\r\n                </select>\r\n\r\n                {/* <br /> */}\r\n\r\n                {/* Difficulty */}\r\n                <select onChange={handleChange} id=\"difficulty\" className=\"inputs\" name=\"trivia_difficulty\">\r\n                    <option value={null}>Any Difficulty</option>\r\n                    <option value=\"easy\">Easy</option>\r\n                    <option value=\"medium\">Medium</option>\r\n                    <option value=\"hard\">Hard</option>\r\n                </select>\r\n\r\n                {/* <br /> */}\r\n\r\n                {/* Start Button */}\r\n                <button id=\"submit\" className=\"button\">\r\n                    Start!\r\n                </button>\r\n            </form>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default Main","import React, { useEffect, useState } from 'react'\r\n\r\n// Random ID's\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nconst Quiz = ({ score, setScore, api, setApi, username, numberOfQuestions, category, difficulty, setDisplay }) => {\r\n    // console.log(numberOfQuestions, api)\r\n\r\n\r\n    const [step, setStep] = useState(1)\r\n\r\n    const [isLoaded, setIsLoaded] = useState(false)\r\n\r\n    /* Tracking which answer is clicked:\r\n        id 1 => First Answer\r\n        id 2 => Seoncd Answer\r\n        id 3 => Third Answer\r\n        id 4 => Fourth Answer\r\n\r\n        id 5 (true) & 6 (false) for boolean answers */\r\n    const [clicked, setClicked] = useState(0)\r\n\r\n\r\n    let questions = api\r\n\r\n    useEffect(() => {\r\n        let triviaApi = `https://opentdb.com/api.php?amount=${numberOfQuestions}${category !== null ? `&category=${category}` : ''}${difficulty !== null ? `&difficulty=${difficulty}` : ''}`\r\n        fetch(triviaApi)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                setIsLoaded(true)\r\n                // console.log('Success (Quiz):', data.results);\r\n                setApi(data.results)\r\n            })\r\n            .catch((error) => {\r\n                setIsLoaded(true)\r\n                console.error('Error:', error);\r\n            });\r\n        //eslint-disable-next-line\r\n    }, []) // Retrieving Api Data \r\n\r\n    let activeStyle = {\r\n        color: 'red'\r\n    }\r\n\r\n    const answerClick = () =>  {\r\n        if (step < numberOfQuestions)\r\n            setStep(step + 1)\r\n        else if (step.toString() === numberOfQuestions)\r\n            setDisplay('result')\r\n    }\r\n\r\n    console.log('api apiii', api)\r\n    return (\r\n        <React.Fragment>\r\n            <div>\r\n                <header>\r\n                    <a onClick={() => setDisplay('main')} href=\"/quiz-app\"><p className=\"title-center\">Quiz App</p></a>\r\n                    <p className=\"subTitle-center\">Test Yourself, {username ? username : 'Player'}!</p>\r\n                </header>\r\n                {isLoaded ?\r\n                    <span id=\"container\" onSubmit={e => {\r\n                        // console.log('Submitted!')\r\n                    }}>\r\n                        <h2 style={{ textAlign: \"center\" }}>Question {step}/{`${numberOfQuestions}`}</h2>\r\n                        {console.log('questions[step]:', questions[step - 1])}\r\n                        {questions[step - 1].type === 'multiple' ?\r\n                            // If Multiple Answer Question\r\n                            <>\r\n                                <h4 style={{ textAlign: 'center' }} dangerouslySetInnerHTML={{ __html: questions[step - 1].question }} />\r\n                                <br />\r\n                                {step % 2 === 0 ?\r\n                                    <>\r\n                                        <h6 onClick={answerClick} dangerouslySetInnerHTML={{ __html: questions[step - 1].incorrect_answers[0] }} className=\"inputs\" />\r\n                                        <h6 onClick={() => {\r\n                                            answerClick()\r\n                                            setScore(score + 1)\r\n                                            }} dangerouslySetInnerHTML={{ __html: questions[step - 1].correct_answer }} className=\"inputs\" />\r\n                                        <h6 onClick={answerClick} dangerouslySetInnerHTML={{ __html: questions[step - 1].incorrect_answers[1] }} className=\"inputs\" />\r\n                                        <h6 onClick={answerClick} dangerouslySetInnerHTML={{ __html: questions[step - 1].incorrect_answers[2] }} className=\"inputs\" />\r\n                                    </>\r\n                                    : <>\r\n                                        <h6 onClick={answerClick} dangerouslySetInnerHTML={{ __html: questions[step - 1].incorrect_answers[2] }} className=\"inputs\" />\r\n                                        <h6 onClick={answerClick} dangerouslySetInnerHTML={{ __html: questions[step - 1].incorrect_answers[1] }} className=\"inputs\" />\r\n                                        <h6 onClick={answerClick} dangerouslySetInnerHTML={{ __html: questions[step - 1].incorrect_answers[0] }} className=\"inputs\" />\r\n                                        <h6 onClick={() => {\r\n                                            answerClick()\r\n                                            setScore(score + 1)\r\n                                            }} dangerouslySetInnerHTML={{ __html: questions[step - 1].correct_answer }} className=\"inputs\" />\r\n                                    </>\r\n                                }\r\n                            </> :\r\n                            // If Boolean Type Question\r\n                            <>\r\n                                <h4 style={{ textAlign: 'center' }} dangerouslySetInnerHTML={{ __html: questions[step - 1].question }} />\r\n                                <br />\r\n                                {step % 2 === 0 ?\r\n                                    <>\r\n                                        <h6 onClick={() => {\r\n                                            answerClick()\r\n                                            setScore(score + 1)\r\n                                            }} className=\"inputs\">{questions[step - 1].correct_answer}</h6>\r\n                                        <h6 onClick={answerClick} className=\"inputs\">{questions[step - 1].incorrect_answers}</h6>\r\n                                    </>\r\n                                    : <>\r\n                                        <h6 onClick={answerClick} className=\"inputs\">{questions[step - 1].incorrect_answers}</h6>\r\n                                        <h6 onClick={() => {\r\n                                            answerClick()\r\n                                            setScore(score + 1)\r\n                                            }} className=\"inputs\">{questions[step - 1].correct_answer}</h6>\r\n                                    </>\r\n                                }\r\n                            </>\r\n                        }\r\n\r\n\r\n                        {/* <button onClick={() => {\r\n                            if (step < numberOfQuestions)\r\n                                setStep(step + 1)\r\n                            else if (step.toString() === numberOfQuestions)\r\n                                setDisplay('result')\r\n                        }} id=\"submit\" className=\"button\">\r\n                            {step.toString() === numberOfQuestions ? `See The Results!` : `Next!`}\r\n                        </button> */}\r\n                    </span>\r\n                    // If loading, do below...\r\n                    : <span id=\"container\">\r\n                        <h1 style={{\r\n                            display: 'flex',\r\n                            justifyContent: 'center',\r\n                            alignItems: 'center',\r\n                            height: '25vh'\r\n                        }}>Loading...</h1>\r\n                    </span>}\r\n            </div>\r\n\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default Quiz","import React from 'react'\r\n\r\nconst Result = ({ setDisplay, username, score, numberOfQuestions }) => {\r\n    return (\r\n        <div>\r\n            <header>\r\n                <a onClick={() => setDisplay('main')} href=\"/quiz-app\">\r\n                    <p className=\"title-center\">Quiz App</p>\r\n                </a>\r\n\r\n                <p className=\"subTitle-center\">\r\n                    Cool, {username ? username : 'Player'}!\r\n                </p>\r\n            </header>\r\n\r\n            <span id=\"container\">\r\n                <h1 className=\"final-result\">{score}/{numberOfQuestions}</h1>\r\n                <h4 className=\"final-result-description\">\r\n                    {numberOfQuestions - score === 0\r\n                        ? `Amazing Results! You are master!!`\r\n                        : score > 10\r\n                            ? `Excellent Results!`\r\n                            : score > 0\r\n                                ? `Cool Results! Maybe try again?`\r\n                                : score === 0 \r\n                                ? `No Worries, Try Again!` \r\n                                : null}\r\n                </h4>\r\n\r\n                <button className=\"button\" onClick={() => setDisplay('main')}>\r\n                    Try Again!\r\n                </button>\r\n\r\n\r\n            </span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Result","import React, { useState, useEffect } from 'react'\r\n\r\n// Import Components\r\nimport Main from './components/Main'\r\nimport Quiz from './components/Quiz'\r\nimport Result from './components/Result'\r\n\r\nconst App = () => {\r\n    // Recording Api Data\r\n    const [api, setApi] = useState([{ error: 'Failed' }])\r\n\r\n    // Changing Display\r\n    const [display, setDisplay] = useState('main')\r\n\r\n    // Recording User Input\r\n    const [username, setUsername] = useState('')\r\n    const [numberOfQuestions, setnumberOfQuestions] = useState(0)\r\n    const [category, setCategory] = useState(null)\r\n    const [difficulty, setDifficulty] = useState(null)\r\n\r\n    const [score, setScore] = useState(0)\r\n\r\n    const handleChange = e => {\r\n        if (e.target.id === 'nickname') {\r\n            setUsername(e.target.value)\r\n        } else if (e.target.id === 'number-of-questions') {\r\n            setnumberOfQuestions(e.target.value)\r\n        } else if (e.target.id === 'category') {\r\n            setCategory(e.target.value)\r\n        } else if (e.target.id === 'difficulty') {\r\n            setDifficulty(e.target.value)\r\n        }\r\n        // console.log(username, numberOfQuestions, category, difficulty)\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            { display === 'main' ?\r\n                <Main\r\n                    username={username}\r\n                    numberOfQuestions={numberOfQuestions}\r\n                    category={category}\r\n                    difficulty={difficulty}\r\n                    setDisplay={setDisplay}\r\n                    handleChange={handleChange}\r\n                />\r\n                : display === 'quiz' ?\r\n                    <Quiz\r\n                        score={score}\r\n                        setScore={setScore}\r\n                        api={api}\r\n                        setApi={setApi}\r\n                        username={username}\r\n                        numberOfQuestions={numberOfQuestions}\r\n                        category={category}\r\n                        difficulty={difficulty}\r\n                        setDisplay={setDisplay}\r\n                    />\r\n                    : display === 'result' ?\r\n                        <Result\r\n                            numberOfQuestions={numberOfQuestions}\r\n                            score={score}\r\n                            setDisplay={setDisplay}\r\n                            username={username}\r\n                        />\r\n                        : null}\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default App","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport App from './App'\r\n\r\nReactDOM.render(<App /> ,document.getElementById('root'))"],"sourceRoot":""}